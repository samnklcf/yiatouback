# Generated by Django 4.2.1 on 2023-06-05 23:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('fullname', models.CharField(max_length=50, verbose_name='Nom complet')),
                ('phone', models.IntegerField(default=0, verbose_name='Numéro de téléphone')),
                ('birthdate_acheteurs', models.DateField(blank=True, null=True)),
                ('genre', models.CharField(choices=[('HOMME', 'HOMME'), ('FEMME', 'FEMME')], default='HOMME', max_length=50, verbose_name='Genre')),
                ('home_address_acheteurs', models.CharField(blank=True, max_length=50, null=True, verbose_name='Adresse')),
                ('condition', models.BooleanField(default=False, verbose_name='Conditions')),
                ('groups', models.ManyToManyField(related_name='traduirepdf_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='traduirepdf_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Donnés des utilisateurs',
                'verbose_name_plural': 'Données des utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_categorie', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'categorie',
            },
        ),
        migrations.CreateModel(
            name='Requetes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('produit', models.CharField(max_length=255)),
                ('image', models.ImageField(null=True, upload_to='')),
                ('description', models.CharField(max_length=255)),
                ('quantite', models.IntegerField()),
                ('prix', models.IntegerField()),
                ('satisfaite', models.BooleanField(default=False)),
                ('nouveau_prix', models.IntegerField(blank=True, null=True)),
                ('nombre_vues', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('acheteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'requete',
                'db_table': 'requetes',
            },
        ),
        migrations.CreateModel(
            name='Vendeurs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.IntegerField(default=0, verbose_name='Numéro e téléphone vendeur')),
                ('office_adress', models.CharField(blank=True, max_length=50, null=True, verbose_name='Lieu de vente')),
                ('Date', models.DateField(auto_now=True, verbose_name='Date de création')),
                ('categorie', models.ManyToManyField(to='yatou.categorie')),
                ('proprio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('requetes', models.ManyToManyField(blank=True, null=True, to='yatou.requetes')),
            ],
            options={
                'verbose_name': 'vendeur',
                'db_table': 'vendeurs',
            },
        ),
    ]
